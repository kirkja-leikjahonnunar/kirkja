TODO:

- loose ends:
  - sqlite
  - server side map/collision
  - submodules with github-desktop
  - trello bootcamp
  

- TODO: tips:
  - check that server calling funcs is actually id == 1 for EVERY client func... does @rpc cover that?
  - for really fast stuff, lag compensation, do some extrapolate on some action to predict time sequence of actual clients
  - load balancing.. how to add/remove servers on the fly as clients come and go
  - c++ optimizing
  - databases: see Game Development Center's discord for big discussion? See Sigrid's database modules

- FIXME: restarting game server should not make auth/gateway fault out

- test dictionary looping for value in dict: ?? returns value??

- Send world state to new clients on login

- implement register

- implement actual database

- FIX: Despawn not syncing

- despawning: typical is wait several seconds on user log off, turn off physics for player, so other clients can stay synced
 
- debug: seems like when gameserver is stopped and started, auth server errors
 
- export port number across projects

- how to load test?

- loading scene progress bar?  ->  see: https://docs.godotengine.org/en/3.5/tutorials/io/background_loading.html

- 2fa? sms? trust device from mac?

- godot bug: timer.timeout warning about await not being needed: https://github.com/godotengine/godot/issues/58156


NOTES
-----
- Godot hard limit 4095 concurrent players per network (ccu)
- requests per second (rps) 
- x509 certificate cost 3rd party verification, cost estimate: ~ $25 / year
- NEVER let crypto key get on Client, only cert, Gateway gets both key and cert.
- password hashing: 
	slow: bcrypt, scrypt, lyra2, argon2  <-  not integrated in godot
	fast: sha, sha2


Unanswered Questions
--------------------
- Does godot have something like Debug.Log that get removed at export time? functionally like commenting out dbg statements?

- which runs first, singleton or main scene?


Answered Questions
------------------



PORTING NOTES
-------------
...from porting things to Godot 4.0

get_tree().set_network_peer()   ->   ??? custom_multiplayer.set_root_path("/GatewayServer")
custom_multiplayer.set_network_peer(network)   ->   custom_multiplayer.set_multiplayer_peer(network)

int(string)?  <--  String.to_int()

get_tree().get_rpc_sender_id()  ->  multiplayer.get_remote_sender_id(

game_server.network.disconnect_peer(game_client_id)  ->  game_server.network.get_peer(game_client_id).peer_disconnect() 

custom_multiplayer  ->  get_tree().set_multiplayer(your_multiplayerapi, "/path/to/branch")
custom_multiplayer.poll() not really needed explicitly, now: get_tree().multiplayer_poll = true (which is default)


CHEATSHEET
----------
One off timers (4.0):  get_tree().create_timer(1.0).timeout.connect(YourFunction)
Blocking timer (4.0):  await get_tree().create_timer(1.0).timeout


GRIPES
------
Text editor needs to be its own window

should be able to drag nodes to inspector for a different object, alpha 7 makes it go away on click on the node

see also current github issues around 4.0: https://github.com/godotengine/godot/issues?q=is%3Aissue+is%3Aopen+milestone%3A4.0+label%3Abug+

auto complete, would be nice to search only in bottom most class items

Searching editor settings i.e. "port", does not search across all sections!!!!!

in filesystem panel, add new scene, creates new scene but does not save immediately

Script editor:
  when you collapse the file list, should still show current file name, maybe on the collapse bar (currently just dead space)
  need better script file navigation, ie next file/ prev file
